import {
  PrismaClient,
  MotivacaoTrabalhoNovamente,
  Criterio,
} from "@prisma/client";
import * as argon from "argon2";

const prisma = new PrismaClient();

async function hashPassword(password: string): Promise<string> {
  return await argon.hash(password);
}

async function main() {
  console.log("üå± Starting comprehensive database seeding...");

  // Clear existing data in correct order (due to foreign keys)
  await prisma.avaliacao360.deleteMany();
  await prisma.avaliacao.deleteMany();
  await prisma.referencia.deleteMany();
  await prisma.criterio.deleteMany();
  await prisma.user.deleteMany();
  await prisma.ciclo.deleteMany();
  await prisma.trilha.deleteMany();
  console.log("üßπ Cleared existing data");

  // 1. Create Trilhas (Tracks)
  console.log("üõ§Ô∏è Creating trilhas...");
  const trilhas = await Promise.all([
    prisma.trilha.create({
      data: {
        name: "Desenvolvimento",
      },
    }),
    prisma.trilha.create({
      data: {
        name: "An√°lise de Dados",
      },
    }),
    prisma.trilha.create({
      data: {
        name: "Infraestrutura",
      },
    }),
    prisma.trilha.create({
      data: {
        name: "Gest√£o",
      },
    }),
  ]);
  console.log(`‚úÖ Created ${trilhas.length} trilhas`);

  // 2. Create Ciclos (Cycles)
  console.log("üîÑ Creating ciclos...");
  const ciclos = await Promise.all([
    prisma.ciclo.create({
      data: {
        name: "Q1 2025",
        year: 2025,
        period: 1,
        status: "aberto",
      },
    }),
    prisma.ciclo.create({
      data: {
        name: "Q2 2025",
        year: 2025,
        period: 2,
        status: "planejamento",
      },
    }),
    prisma.ciclo.create({
      data: {
        name: "Q4 2024",
        year: 2024,
        period: 4,
        status: "finalizado",
      },
    }),
  ]);
  console.log(`‚úÖ Created ${ciclos.length} ciclos`);

  // 3. Create Users
  console.log("üë• Creating users...");
  const users = await Promise.all([
    prisma.user.create({
      data: {
        name: "Raylandson Ces√°rio",
        email: "raylandson.cesario@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "admin",
        unidade: "Desenvolvimento",
        trilhaId: trilhas[0].id, // Desenvolvimento
      },
    }),
    prisma.user.create({
      data: {
        name: "Alice Cadete",
        email: "alice.cadete@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "manager",
        unidade: "Desenvolvimento",
        trilhaId: trilhas[0].id, // Desenvolvimento
      },
    }),
    prisma.user.create({
      data: {
        name: "Arthur Lins",
        email: "arthur.lins@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Dados",
        trilhaId: trilhas[1].id, // An√°lise de Dados
      },
    }),
    prisma.user.create({
      data: {
        name: "Erico Chen",
        email: "erico.chen@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Infraestrutura",
        trilhaId: trilhas[2].id, // Infraestrutura
      },
    }),
    prisma.user.create({
      data: {
        name: "Luan Bezerra",
        email: "luan.bezerra@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Desenvolvimento",
        trilhaId: trilhas[0].id, // Desenvolvimento
      },
    }),
    prisma.user.create({
      data: {
        name: "Jos√© M√°rio",
        email: "jose.mario@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "manager",
        unidade: "Gest√£o",
        trilhaId: trilhas[3].id, // Gest√£o
      },
    }),
    prisma.user.create({
      data: {
        name: "Maria Santos",
        email: "maria.santos@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Desenvolvimento",
        trilhaId: trilhas[0].id, // Desenvolvimento
      },
    }),
    prisma.user.create({
      data: {
        name: "Pedro Costa",
        email: "pedro.costa@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Dados",
        trilhaId: trilhas[1].id, // An√°lise de Dados
      },
    }),
    prisma.user.create({
      data: {
        name: "Ana Oliveira",
        email: "ana.oliveira@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Infraestrutura",
        trilhaId: trilhas[2].id, // Infraestrutura
      },
    }),
    prisma.user.create({
      data: {
        name: "Carlos Silva",
        email: "carlos.silva@rocketcorp.com",
        password: await hashPassword("password123"),
        role: "user",
        unidade: "Gest√£o",
        trilhaId: trilhas[3].id, // Gest√£o
      },
    }),
  ]);
  console.log(`‚úÖ Created ${users.length} users`);

  // 4. Set up mentor relationships
  console.log("ü§ù Setting up mentor relationships...");
  await prisma.user.update({
    where: { id: users[4].id }, // Luan
    data: { mentorId: users[1].id }, // Alice as mentor
  });
  await prisma.user.update({
    where: { id: users[6].id }, // Maria
    data: { mentorId: users[1].id }, // Alice as mentor
  });
  await prisma.user.update({
    where: { id: users[7].id }, // Pedro
    data: { mentorId: users[2].id }, // Arthur as mentor
  });
  console.log("‚úÖ Mentor relationships established");

  // 5. Create Criterios
  console.log("üìã Creating criterios...");

  // Base criterios that will be created for each trilha
  const baseCriterios = [
    {
      name: "Organiza√ß√£o",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Ser organizado e contribuir para a organiza√ß√£o do grupo, compartilhando m√©todos e entreg√°veis",
    },
    {
      name: "Imagem",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Passar uma imagem pessoal positiva e profissional e fortalecer a imagem do grupo",
    },
    {
      name: "Iniciativa",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Ser pro-ativo, buscar assumir responsabilidades e aproveitar oportunidades",
    },
    {
      name: "Comprometimento",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Se dedicar o necess√°rio para atingimento dos resultados desejados, considerando mudan√ßas em prazo e escopo das atividades",
    },
    {
      name: "Relacionamento Inter-Pessoal",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Relacionar-se positivamente interna e externamente, sem comprometer o profissionalismo",
    },
    {
      name: "Aprendizagem Cont√≠nua",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Buscar sempre aprender as t√©cnicas mais modernas e dividir o conhecimento com o grupo",
    },
    {
      name: "Flexibilidade",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Capacidade de se adaptar a situa√ß√µes diversas, lidar positivamente com cr√≠ticas (sejam pessoais ou ao grupo) e superar obst√°culos",
    },
    {
      name: "Trabalho em Equipe",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Pensar sempre no √≥timo global para o grupo, tanto na divis√£o de tarefas e como no aux√≠lio aos membros do mesmo, contribuindo para que a equipe alcance seus objetivos",
    },
    {
      name: "Produtividade",
      tipo: "tecnico",
      peso: 5.0,
      description:
        "Otimizar a execu√ß√£o das atividades de forma a entregar todos os resultados necess√°rios no menor tempo poss√≠vel",
    },
    {
      name: "Qualidade",
      tipo: "tecnico",
      peso: 5.0,
      description:
        "Ser perfeccionista, n√£o gerando erros e retrabalho, entregando resultados que atendam ou superem as expectativas",
    },
    {
      name: "Foco no Cliente",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Entender a real necessidade do cliente a partir de suas solicita√ß√µes e auxili√°-lo nesta visualiza√ß√£o, estabelecendo uma rela√ß√£o de confian√ßa com o mesmo",
    },
    {
      name: "Criatividade e Inova√ß√£o",
      tipo: "comportamental",
      peso: 5.0,
      description:
        "Pensar criativamente, gerando solu√ß√µes inovadoras, adequadas √† realidade do projeto",
    },
    {
      name: "Gest√£o de Pessoas",
      tipo: "gestao",
      peso: 5.0,
      description:
        "Gerenciar grupos de pessoas, capacitando-as, motivando-as e aproveitando ao m√°ximo as qualidades individuais",
    },
    {
      name: "Gest√£o de Projetos",
      tipo: "gestao",
      peso: 5.0,
      description:
        "Gerenciar projetos, conduzindo reuni√µes, definindo atividades, alocando recursos de forma √≥tima e controlando a execu√ß√£o",
    },
    {
      name: "Gest√£o Organizacional",
      tipo: "gestao",
      peso: 5.0,
      description:
        "Contribuir para a efici√™ncia e efic√°cia da gest√£o da empresa, criando mecanismos que a tornem cada vez mais organizada, estruturada e independente",
    },
    {
      name: "Novos Clientes",
      tipo: "negocios",
      peso: 5.0,
      description:
        "Gerar novos contatos, alavancando novos clientes para a empresa",
    },
    {
      name: "Novos Projetos",
      tipo: "negocios",
      peso: 5.0,
      description:
        "Gerar novos projetos em clientes j√° existentes, com base na rela√ß√£o de confian√ßa e atendimento de demandas com alto padr√£o de qualidade",
    },
    {
      name: "Novos Produtos ou Servi√ßos",
      tipo: "negocios",
      peso: 5.0,
      description:
        "Gerar novos produtos e/ou servi√ßos com grande potencial de mercado",
    },
  ];

  // Create criterios for each trilha
  const allCriterios: Criterio[] = [];
  for (let i = 0; i < trilhas.length; i++) {
    const trilha = trilhas[i];
    for (const criterio of baseCriterios) {
      const createdCriterio = await prisma.criterio.create({
        data: {
          name: criterio.name,
          tipo: criterio.tipo,
          peso: criterio.peso,
          description: criterio.description,
          trilhaId: trilha.id,
          idCiclo: ciclos[0].id,
        },
      });
      allCriterios.push(createdCriterio);
    }
  }

  console.log(
    `‚úÖ Created ${allCriterios.length} criterios across ${trilhas.length} trilhas`
  );

  // 6. Create Referencias
  console.log("üìù Creating referencias...");
  const referencias = await Promise.all([
    prisma.referencia.create({
      data: {
        idReferenciador: users[1].id, // Alice
        idReferenciado: users[4].id, // Luan
        idCiclo: ciclos[0].id, // Q1 2025
        justificativa:
          "Luan demonstrou excelente crescimento t√©cnico e √© muito colaborativo. Sempre disposto a ajudar os colegas e busca constantemente aprender novas tecnologias.",
      },
    }),
    prisma.referencia.create({
      data: {
        idReferenciador: users[0].id, // Raylandson
        idReferenciado: users[6].id, // Maria
        idCiclo: ciclos[0].id, // Q1 2025
        justificativa:
          "Maria √© uma desenvolvedora excepcional com forte capacidade de resolver problemas complexos. Sua dedica√ß√£o e qualidade t√©cnica s√£o exemplares.",
      },
    }),
    prisma.referencia.create({
      data: {
        idReferenciador: users[2].id, // Arthur
        idReferenciado: users[7].id, // Pedro
        idCiclo: ciclos[0].id, // Q1 2025
        justificativa:
          "Pedro possui conhecimento s√≥lido em an√°lise de dados e demonstra grande potencial para crescimento na √°rea de Data Science.",
      },
    }),
    prisma.referencia.create({
      data: {
        idReferenciador: users[5].id, // Jos√© M√°rio
        idReferenciado: users[3].id, // Erico
        idCiclo: ciclos[0].id, // Q1 2025
        justificativa:
          "Erico tem mostrado excelente trabalho em DevOps e infraestrutura. Sua expertise t√©cnica e capacidade de automa√ß√£o s√£o muito valiosas.",
      },
    }),
  ]);
  console.log(`‚úÖ Created ${referencias.length} referencias`);

  // 7. Create Avaliacoes
  console.log("üìä Creating avaliacoes...");
  const avaliacoes = await Promise.all([
    // Auto-avalia√ß√µes (mesmo idAvaliador e idAvaliado, COM criterioId)
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[0].id, // Raylandson
        idAvaliado: users[0].id, // Raylandson (auto-avalia√ß√£o)
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Tenho me dedicado bastante ao desenvolvimento da equipe e aos projetos. Acredito que posso melhorar na organiza√ß√£o pessoal.",
        criterioId: allCriterios.find(
          (c) => c.name === "Organiza√ß√£o" && c.trilhaId === trilhas[0].id
        )?.id,
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[4].id, // Luan
        idAvaliado: users[4].id, // Luan (auto-avalia√ß√£o)
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Estou focado em melhorar minha produtividade e qualidade de entrega. Tenho buscado aprender novas tecnologias constantemente.",
        criterioId: allCriterios.find(
          (c) => c.name === "Produtividade" && c.trilhaId === trilhas[0].id
        )?.id,
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[7].id, // Pedro
        idAvaliado: users[7].id, // Pedro (auto-avalia√ß√£o)
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Tenho me esfor√ßado para ser mais criativo nas solu√ß√µes anal√≠ticas e buscar sempre inovar nas abordagens de an√°lise de dados.",
        criterioId: allCriterios.find(
          (c) =>
            c.name === "Criatividade e Inova√ß√£o" && c.trilhaId === trilhas[1].id
        )?.id,
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[3].id, // Erico
        idAvaliado: users[3].id, // Erico (auto-avalia√ß√£o)
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Tenho trabalhado para melhorar minha flexibilidade e adapta√ß√£o a novas tecnologias de infraestrutura.",
        criterioId: allCriterios.find(
          (c) => c.name === "Flexibilidade" && c.trilhaId === trilhas[2].id
        )?.id,
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[9].id, // Carlos
        idAvaliado: users[9].id, // Carlos (auto-avalia√ß√£o)
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Tenho focado em desenvolver minhas habilidades de gest√£o de pessoas e busco sempre motivar a equipe.",
        criterioId: allCriterios.find(
          (c) => c.name === "Gest√£o de Pessoas" && c.trilhaId === trilhas[3].id
        )?.id,
      },
    }),

    // Avalia√ß√µes normais (diferentes idAvaliador e idAvaliado, SEM criterioId)
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[1].id, // Alice
        idAvaliado: users[4].id, // Luan
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Luan mostrou excelente progresso t√©cnico e sempre demonstra iniciativa para aprender novas tecnologias. Muito dedicado.",
        // criterioId: null (avalia√ß√£o geral)
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[0].id, // Raylandson
        idAvaliado: users[6].id, // Maria
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 5,
        justificativa:
          "Maria demonstra dom√≠nio t√©cnico excepcional e excelente trabalho em equipe. Sempre colaborativa e proativa.",
        // criterioId: null (avalia√ß√£o geral)
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[2].id, // Arthur
        idAvaliado: users[7].id, // Pedro
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        justificativa:
          "Pedro tem excelente capacidade anal√≠tica e consegue extrair insights valiosos dos dados. Comunica√ß√£o clara dos resultados.",
        // criterioId: null (avalia√ß√£o geral)
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[5].id, // Jos√© M√°rio
        idAvaliado: users[9].id, // Carlos
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 5,
        justificativa:
          "Carlos demonstra excelente capacidade de gest√£o e lideran√ßa. Sempre organizado e focado nos resultados.",
        // criterioId: null (avalia√ß√£o geral)
      },
    }),
    prisma.avaliacao.create({
      data: {
        idAvaliador: users[1].id, // Alice
        idAvaliado: users[6].id, // Maria
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 5,
        justificativa:
          "Maria √© uma das melhores desenvolvedoras da equipe. Sempre disposta a ajudar e com excelente qualidade t√©cnica.",
        // criterioId: null (avalia√ß√£o geral)
      },
    }),
  ]);
  console.log(`‚úÖ Created ${avaliacoes.length} avaliacoes`);

  // 8. Create Avaliacoes 360
  console.log("ÔøΩ Creating avaliacoes 360...");
  const avaliacoes360 = await Promise.all([
    prisma.avaliacao360.create({
      data: {
        idAvaliador: users[4].id, // Luan
        idAvaliado: users[1].id, // Alice
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 5,
        pontosFortes:
          "Excelente lideran√ßa t√©cnica, sempre dispon√≠vel para mentoria, comunica√ß√£o clara e objetiva, conhecimento t√©cnico muito s√≥lido.",
        pontosMelhora:
          "Poderia delegar mais algumas tarefas para desenvolver a autonomia da equipe.",
        nomeProjeto: "Sistema de Gest√£o de Performance",
        periodoMeses: 6,
        trabalhariaNovamente: MotivacaoTrabalhoNovamente.CONCORDO_TOTALMENTE,
      },
    }),
    prisma.avaliacao360.create({
      data: {
        idAvaliador: users[6].id, // Maria
        idAvaliado: users[0].id, // Raylandson
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 5,
        pontosFortes:
          "Vis√£o estrat√©gica excepcional, capacidade de resolver problemas complexos, mentorship de qualidade, conhecimento t√©cnico abrangente.",
        pontosMelhora:
          "√Äs vezes se envolve muito nos detalhes t√©cnicos, poderia focar mais na vis√£o macro.",
        nomeProjeto: "Plataforma de Avalia√ß√£o 360",
        periodoMeses: 8,
        trabalhariaNovamente: MotivacaoTrabalhoNovamente.CONCORDO_TOTALMENTE,
      },
    }),
    prisma.avaliacao360.create({
      data: {
        idAvaliador: users[7].id, // Pedro
        idAvaliado: users[2].id, // Arthur
        idCiclo: ciclos[0].id, // Q1 2025
        nota: 4,
        pontosFortes:
          "Conhecimento profundo em an√°lise de dados, boa capacidade de ensinar conceitos complexos, organizado e met√≥dico.",
        pontosMelhora:
          "Poderia ser mais √°gil na entrega de algumas an√°lises explorat√≥rias.",
        nomeProjeto: "Dashboard de M√©tricas de Neg√≥cio",
        periodoMeses: 4,
        trabalhariaNovamente: MotivacaoTrabalhoNovamente.CONCORDO_PARCIALMENTE,
      },
    }),
  ]);
  console.log(`‚úÖ Created ${avaliacoes360.length} avaliacoes 360`);

  console.log("\nüéâ Seeding completed successfully!");

  // Display summary
  const summary = {
    trilhas: await prisma.trilha.count(),
    ciclos: await prisma.ciclo.count(),
    users: await prisma.user.count(),
    criterios: await prisma.criterio.count(),
    referencias: await prisma.referencia.count(),
    avaliacoes: await prisma.avaliacao.count(),
    avaliacoes360: await prisma.avaliacao360.count(),
  };

  console.log("\nüìä Database Summary:");
  console.log(`üë• Users: ${summary.users}`);
  console.log(`üõ§Ô∏è Trilhas: ${summary.trilhas}`);
  console.log(`üîÑ Ciclos: ${summary.ciclos}`);
  console.log(`üìã Criterios: ${summary.criterios}`);
  console.log(`üìù Referencias: ${summary.referencias}`);
  console.log(`üìä Avaliacoes: ${summary.avaliacoes}`);
  console.log(`üîÑ Avaliacoes 360: ${summary.avaliacoes360}`);
}

main()
  .catch((e) => {
    console.error("‚ùå Error during seeding:", e);
    process.exit(1);
  })
  .finally(() => {
    void prisma.$disconnect();
  });
